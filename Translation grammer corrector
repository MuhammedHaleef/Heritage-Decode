{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMHpF4+Q71L7VavXdmwI9Qp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-z0p0e43p3lW","executionInfo":{"status":"ok","timestamp":1705817740837,"user_tz":-330,"elapsed":51365,"user":{"displayName":"Chehan Haputhanthri","userId":"09175902681221005445"}},"outputId":"64e221d7-d42a-4d07-cef7-a063fb46857a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a word: xobrea\n","Sorry, the word is not found\n"]},{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":2}],"source":["class Node:\n","    def __init__(self, word):\n","        self.word = word\n","        self.next = None\n","\n","class Main:\n","    def __init__(self):\n","        self.head = None\n","        self.size = 0\n","\n","    def insert(self, word):\n","        new_node = Node(word)\n","        if self.head is None:\n","            self.head = new_node\n","        else:\n","            current = self.head\n","            while current.next is not None:\n","                current = current.next\n","            current.next = new_node\n","        self.size += 1\n","\n","    def search(self, word):\n","        current = self.head\n","        while current is not None:\n","            if current.word == word:\n","                return True\n","            current = current.next\n","        return False\n","\n","    def check_spelling(self, word):\n","        if self.search(word):\n","            print(\"The word is spelled correctly.\")\n","            return True\n","        if self.check_with_insertion(word):\n","            return True\n","        if self.check_with_deletion(word):\n","            return True\n","        if self.check_with_swap(word):\n","            return True\n","        print(\"Sorry, the word is not found\")\n","        return False\n","\n","    def check_with_insertion(self, word):\n","        for i in range(len(word) + 1):\n","            for c in 'abcdefghijklmnopqrstuvwxyz':\n","                new_word = word[:i] + c + word[i:]\n","                if self.search(new_word):\n","                    print(\"Did you mean:\", new_word)\n","                    return True\n","        return False\n","\n","    def check_with_deletion(self, word):\n","        for i in range(len(word)):\n","            new_word = word[:i] + word[i + 1:]\n","            if self.search(new_word):\n","                print(\"Did you mean:\", new_word)\n","                return True\n","        return False\n","\n","    def check_with_swap(self, word):\n","        for i in range(len(word) - 1):\n","            new_word = word[:i] + word[i + 1] + word[i] + word[i + 2:]\n","            if self.search(new_word):\n","                print(\"Did you mean:\", new_word)\n","                return True\n","        return False\n","\n","# Example usage\n","main_obj = Main()\n","main_obj.insert(\"upasika\")\n","main_obj.insert(\"lene\")\n","main_obj.insert(\"saghasa\")\n","main_obj.insert(\"putaha\")\n","main_obj.insert(\"upasaka\")\n","\n","user_input = input(\"Enter a word: \")\n","main_obj.check_spelling(user_input)\n"]}]}